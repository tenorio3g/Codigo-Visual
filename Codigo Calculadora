#include <LiquidCrystal_I2C.h>
#include <Keypad.h>

LiquidCrystal_I2C lcd(0x27, 16, 2);
const byte filas = 4; 
const byte columnas = 4; 
char teclas[filas][columnas] = {
  {'1','2','3','+'},
  {'4','5','6','-'},
  {'7','8','9','*'},
  {'C','0','=','/'}
};
byte pinesFilas[filas] = {2, 3, 4, 5}; 
byte pinesColumnas[columnas] = {6, 7, 8, 9}; 
Keypad teclado = Keypad(makeKeymap(teclas), pinesFilas, pinesColumnas, filas, columnas);
int num1 = 0;
int num2 = 0;
int resultado = 0;
char operador = ' ';
bool operadorIngresado = false;
bool calculando = false;

void setup() {
  lcd.init();
  lcd.backlight();
  lcd.clear();
  lcd.print("Calculadora UDA:");
  pinMode(10, OUTPUT);
  pinMode(11, OUTPUT);
  pinMode(12, OUTPUT);
  pinMode(13, OUTPUT);
}

void loop() {
  char tecla = teclado.getKey();
  if (tecla != NO_KEY) {
    switch (tecla) {
      case 'C':
        num1 = 0;
        num2 = 0;
        resultado = 0;
        operador = ' ';
        operadorIngresado = false;
        calculando = false;
        actualizarDisplay();
        break;
      case '+':
      case '-':
      case '*':
      case '/':
        if (!calculando) {
          operador = tecla;
          operadorIngresado = true;
          calculando = true;
          actualizarDisplay();
        } else {
          calcularResultado();
          operador = tecla;
          operadorIngresado = true;
        }
        break;
      case '=':
        if (calculando) {
          calcularResultado();
          operador = ' ';
          operadorIngresado = false;
          calculando = false;
        }
        break;
      default:
        if (operadorIngresado) {
          num2 = (num2 * 10) + (tecla - '0');
        } else {
          num1 = (num1 * 10) + (tecla - '0');
        }
        actualizarDisplay();
        break;
    }
  }
}

void calcularResultado() {
  switch (operador) {
    case '+':
      resultado = num1 + num2;
      break;
    case '-':
      resultado = num1 - num2;
      break;
    case '*':
      resultado = num1 * num2;
      break;
    case '/':
      if (num2 != 0) {
        resultado = num1 / num2;
      } else {
        resultado = 0; // Manejar divisi√≥n por cero
      }
      break;
  }
  num1 = resultado;
  num2 = 0;
  actualizarDisplay();
}

void actualizarDisplay() {
  lcd.clear();
  lcd.print(num1);
  lcd.print(" ");
  lcd.print(operador);
  lcd.print(" ");
  lcd.print(num2);
  lcd.setCursor(0, 1);
  lcd.print("R: ");
  lcd.print(resultado);
}
